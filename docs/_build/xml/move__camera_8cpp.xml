<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="move__camera_8cpp" kind="file" language="C++">
    <compoundname>move_camera.cpp</compoundname>
    <includes local="no">ros/ros.h</includes>
    <includes local="no">patrolling_robot/MoveCamera.h</includes>
    <includes local="no">std_msgs/Float64.h</includes>
    <includes local="no">sensor_msgs/JointState.h</includes>
    <includes local="no">std_msgs/Bool.h</includes>
    <includes local="no">std_srvs/SetBool.h</includes>
    <incdepgraph>
      <node id="6">
        <label>std_msgs/Bool.h</label>
      </node>
      <node id="3">
        <label>patrolling_robot/MoveCamera.h</label>
      </node>
      <node id="4">
        <label>std_msgs/Float64.h</label>
      </node>
      <node id="1">
        <label>/root/ros_ws/src/patrolling_robot/src/move_camera.cpp</label>
        <link refid="move__camera_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>sensor_msgs/JointState.h</label>
      </node>
      <node id="7">
        <label>std_srvs/SetBool.h</label>
      </node>
      <node id="2">
        <label>ros/ros.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_move_camera" prot="public">MoveCamera</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="move__camera_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Main function for the move_camera ROS node. </para>
        </briefdescription>
        <detaileddescription>
<para>This function initializes the ROS node and creates an instance of the <ref refid="class_move_camera" kindref="compound">MoveCamera</ref> class. It then enters a loop to process incoming messages and publish the appropriate responses.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of command line arguments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of command line arguments</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the node shuts down properly, -1 if there is an error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/ros_ws/src/patrolling_robot/src/move_camera.cpp" line="128" column="5" bodyfile="/root/ros_ws/src/patrolling_robot/src/move_camera.cpp" bodystart="128" bodyend="134"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Node to move the robot&apos;s camera. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ettore Sani </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>06/01/2023</para>
</simplesect>
Subscribes to: <linebreak/>
<itemizedlist>
<listitem><para>/camera/camera_command</para>
</listitem><listitem><para>/joint_states</para>
</listitem></itemizedlist>
</para>
<para>Publishes to: <linebreak/>
<itemizedlist>
<listitem><para>/yawl_joint_velocity_controller/command</para>
</listitem><listitem><para>/vertical_joint_position_controller/command</para>
</listitem><listitem><para>/pitch_joint_position_controller/command</para>
</listitem><listitem><para>/camera/camera_turn</para>
</listitem></itemizedlist>
</para>
<para>Description :</para>
<para>Node to move the camera of the robot. It is an adapter from the camera/camera_command topic to all the topics needed for moving each joint of the robot. It also subscribes to the /joint_states topic, and triggers the /camera/camera_turn whenever the camera completed a full rotation. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="27"><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;patrolling_robot/MoveCamera.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;std_msgs/Float64.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sensor_msgs/JointState.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;std_msgs/Bool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;std_srvs/SetBool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_move_camera" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_move_camera" kindref="compound">MoveCamera</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>ros::NodeHandle<sp/>nh;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>ros::Subscriber<sp/>commandSub;<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>ros::Subscriber<sp/>jointSub;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>ros::Publisher<sp/>rotatePub;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>ros::Publisher<sp/>raisePub;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>ros::Publisher<sp/>pitchPub;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>ros::Publisher<sp/>turnPub;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>turn<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="class_move_camera_1a22eaf4579fd2cf3be091ec1c18c1fc4b" kindref="member">MoveCamera</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>commandSub<sp/>=<sp/>nh.subscribe(</highlight><highlight class="stringliteral">&quot;/camera/camera_command&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>&amp;<ref refid="class_move_camera_1a37a697910702a59fecc14d61759ed269" kindref="member">MoveCamera::CamCb</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>jointSub<sp/><sp/><sp/>=<sp/>nh.subscribe(</highlight><highlight class="stringliteral">&quot;/joint_states&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>&amp;<ref refid="class_move_camera_1a9869cc6bcfb5d5ca46e09919cc7dfec2" kindref="member">MoveCamera::TurnCb</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>rotatePub<sp/><sp/>=<sp/>nh.advertise&lt;std_msgs::Float64&gt;(</highlight><highlight class="stringliteral">&quot;/yawl_joint_velocity_controller/command&quot;</highlight><highlight class="normal">,1);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>raisePub<sp/><sp/><sp/>=<sp/>nh.advertise&lt;std_msgs::Float64&gt;(</highlight><highlight class="stringliteral">&quot;/vertical_joint_position_controller/command&quot;</highlight><highlight class="normal">,1);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>pitchPub<sp/><sp/><sp/>=<sp/>nh.advertise&lt;std_msgs::Float64&gt;(</highlight><highlight class="stringliteral">&quot;/pitch_joint_position_controller/command&quot;</highlight><highlight class="normal">,1);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>turnPub<sp/><sp/><sp/><sp/>=<sp/>nh.advertise&lt;std_msgs::Bool&gt;(</highlight><highlight class="stringliteral">&quot;/camera/camera_turn&quot;</highlight><highlight class="normal">,1);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_move_camera_1a37a697910702a59fecc14d61759ed269" kindref="member">CamCb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>patrolling_robot::MoveCamera<sp/>command)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>std_msgs::Float64<sp/>omega;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>std_msgs::Float64<sp/></highlight><highlight class="keyword">raise</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>std_msgs::Float64<sp/>pitch;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>omega.data<sp/>=<sp/>command.omega;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">raise</highlight><highlight class="normal">.data<sp/>=<sp/>command.raise;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>pitch.data<sp/>=<sp/>command.pitch;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>rotatePub.publish(omega);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>raisePub.publish(</highlight><highlight class="keyword">raise</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>pitchPub.publish(pitch);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_move_camera_1a9869cc6bcfb5d5ca46e09919cc7dfec2" kindref="member">TurnCb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sensor_msgs::JointState<sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.position[6]<sp/>&gt;<sp/>0.02)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>std::fmod(state.position[6],<sp/>6.28);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theta<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>theta<sp/>&lt;<sp/>0.02<sp/>&amp;&amp;<sp/>!turn){</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Full<sp/>camera&apos;s<sp/>turn.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std_msgs::Bool<sp/>res;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.data<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>turn<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>turnPub.publish(res);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>turn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="move__camera_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;move_camera&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="class_move_camera" kindref="compound">MoveCamera</ref><sp/>mc;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>ros::spin();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/root/ros_ws/src/patrolling_robot/src/move_camera.cpp"/>
  </compounddef>
</doxygen>
